import fs from 'fs/promises';
import postcss from 'postcss';
import tailwindcss from 'tailwindcss';
import autoprefixer from 'autoprefixer';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

async function buildCSS() {
    try {
        // Read the source CSS file
        const css = await fs.readFile(path.join(__dirname, 'src/styles.module.css'), 'utf8');

        // Process with PostCSS (Tailwind + Autoprefixer)
        const result = await postcss([
            tailwindcss,
            autoprefixer,
        ]).process(css, {
            from: path.join(__dirname, 'src/styles.module.css'),
            to: path.join(__dirname, 'src/styles.processed.js')
        });

        // Create a JavaScript module that exports the processed CSS
        const jsModule = `// Generated by build-css.js
export default ${JSON.stringify(result.css)};`;

        // Write the JavaScript module
        await fs.writeFile(path.join(__dirname, 'src/styles.processed.js'), jsModule);
        
        console.log('CSS processed and module generated successfully');
    } catch (error) {
        console.error('Error processing CSS:', error);
        process.exit(1);
    }
}

buildCSS();
